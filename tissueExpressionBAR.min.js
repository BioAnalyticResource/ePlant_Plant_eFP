let existingStrokeData={};function addTissueMetadata(e){var t,a,s;e.includes("Half_Leaf_Pseudomonas_syringae")&&(e+="_outline"),document.getElementById(createSVGExpressionData.svgObjectName)&&document.getElementById(createSVGExpressionData.svgObjectName)&&(s=(a=(t=document.getElementById(createSVGExpressionData.svgObjectName)).getElementById(e)).childNodes);var i=void 0,o=void 0;if(t&&a){if(a.getAttribute("stroke-width"))i=a.getAttribute("stroke-width"),a.getAttribute("stroke")&&(o=a.getAttribute("stroke"));else if(s.length>0)for(var n=0;n<s.length;n++)"path"===s[n].nodeName&&(s[n].getAttribute("stroke-width")&&(i=s[n].getAttribute("stroke-width")),s[n].getAttribute("stroke")&&(o=s[n].getAttribute("stroke")));if(existingStrokeData[e]||(existingStrokeData[e]={},existingStrokeData[e].strokeWidth=i,existingStrokeData[e].strokeColour=o,existingStrokeData[e].addedMetadata=!1),t.getElementById(e)&&!existingStrokeData[e].addedMetadata){existingStrokeData[e].addedMetadata=!0;var l=t.getElementById(e),r=2.25*(i=Number(i));r>2.25&&2.25>i?r=2.25:r<1.125&&1.125>i?r=1.125:0===r?r=2.25:r||(r=1.125);var d=!1;if(l.getAttribute("stroke-width"))t.getElementById(e).setAttribute("stroke-width",r),t.getElementById(e).setAttribute("stroke","#000"),d=!0;else if(s&&s.length>0)for(n=0;n<s.length;n++)"path"===s[n].nodeName&&s[n].getAttribute("stroke-width")&&(s[n].setAttribute("stroke-width",r),s[n].getAttribute("stroke")&&s[n].setAttribute("stroke","#000"),d=!0);d||(t.getElementById(e).setAttribute("stroke-width",r),t.getElementById(e).setAttribute("stroke","#000"))}}}function removeTissueMetadata(e){e.includes("Half_Leaf_Pseudomonas_syringae")&&(e+="_outline");var t,a,s;if(document.getElementById(createSVGExpressionData.svgObjectName)&&document.getElementById(createSVGExpressionData.svgObjectName)&&(s=(a=(t=document.getElementById(createSVGExpressionData.svgObjectName)).getElementById(e)).childNodes),existingStrokeData[e]&&existingStrokeData[e].addedMetadata)if(existingStrokeData[e].addedMetadata=!1,a&&a.getAttribute("stroke-width"))Number(existingStrokeData[e].strokeWidth)>=0?t.getElementById(e).setAttribute("stroke-width",existingStrokeData[e].strokeWidth):existingStrokeData[e].strokeWidth?t.getElementById(e).setAttribute("stroke-width",1):t.getElementById(e).removeAttribute("stroke-width"),a.getAttribute("stroke")&&(existingStrokeData[e].strokeColour?t.getElementById(e).setAttribute("stroke",existingStrokeData[e].strokeColour):t.getElementById(e).setAttribute("stroke","#000"));else if(s.length>0)for(var i=0;i<s.length;i++)"path"===s[i].nodeName&&(s[i].getAttribute("stroke-width")&&(Number(existingStrokeData[e].strokeWidth)>=0?s[i].setAttribute("stroke-width",existingStrokeData[e].strokeWidth):existingStrokeData[e].strokeWidth?s[i].setAttribute("stroke-width",1):t.getElementById(e).removeAttribute("stroke-width")),s[i].getAttribute("stroke")&&(existingStrokeData[e].strokeColour?s[i].setAttribute("stroke",existingStrokeData[e].strokeColour):s[i].setAttribute("stroke","#000")));else a.setAttribute("stroke-width",1),a.setAttribute("stroke","#000")}let ePlantPlantEFPHandleMouseEventData={start:!1,cacheMousePos:{x:null,y:null},startHeight:null,zoomLevel:1};function ePlantPlantEFPHandleMouseEvent(e,t,a,s=1.5){let i=e.firstElementChild;if(ePlantPlantEFPHandleMouseEventData.startHeight||(ePlantPlantEFPHandleMouseEventData.startHeight=i.viewBox.baseVal.height),"down"===t&&!ePlantPlantEFPHandleMouseEventData.start&&window.getSelection()&&window.getSelection().isCollapsed&&(a.preventDefault(),ePlantPlantEFPHandleMouseEventData.start=!0,ePlantPlantEFPHandleMouseEventData.cacheMousePos={x:a.clientX,y:a.clientY}),"move"===t&&ePlantPlantEFPHandleMouseEventData.start){a.preventDefault();let e=i.viewBox.baseVal.height?window.innerHeight/i.viewBox.baseVal.height/s:s,t=-(a.clientX-ePlantPlantEFPHandleMouseEventData.cacheMousePos.x)/e,o=-(a.clientY-ePlantPlantEFPHandleMouseEventData.cacheMousePos.y)/e,n=.95,l=i.height.baseVal.value?(100*n-i.height.baseVal.value/i.viewBox.baseVal.height)/100:(100*n-window.innerHeight/i.viewBox.baseVal.height)/100;(l<=0||l>=1)&&(l=n);let r=i.width.baseVal.value?(100*n-i.width.baseVal.value/i.viewBox.baseVal.width)/100:(100*n-window.innerWidth/i.viewBox.baseVal.height)/100;(r<=0||r>=1)&&(r=n);let d=1/ePlantPlantEFPHandleMouseEventData.zoomLevel==1?n:1/ePlantPlantEFPHandleMouseEventData.zoomLevel,h=i.viewBox.baseVal.width*l*d,u=i.viewBox.baseVal.width*l,f=i.viewBox.baseVal.height*r,v=f*d;ePlantPlantEFPHandleMouseEventData.cacheMousePos={x:a.clientX,y:a.clientY},i.viewBox.baseVal.y+o<=v&&i.viewBox.baseVal.y+o>=-f?i.viewBox.baseVal.y+=o:i.viewBox.baseVal.y=i.viewBox.baseVal.y+o>0?v:-f,i.viewBox.baseVal.x+t<=h&&i.viewBox.baseVal.x+t>=-u?i.viewBox.baseVal.x+=t:i.viewBox.baseVal.x=i.viewBox.baseVal.x+t>0?h:-u}"up"===t&&(ePlantPlantEFPHandleMouseEventData.start=!1)}function ePlantPlantEFPHandleMouseWheel(e,t,a=3){let s=e.firstElementChild,i=s.viewBox.baseVal,o=t.deltaY>0,n=ePlantPlantEFPHandleMouseEventData.startHeight?window.innerHeight/ePlantPlantEFPHandleMouseEventData.startHeight/a:a;window.getSelection()&&window.getSelection().isCollapsed&&i&&t.deltaY&&ePlantPlantEFPHandleMouseEventData.start&&(t.preventDefault(),o?(s.viewBox.baseVal.width=i.width*n,s.viewBox.baseVal.height=i.height*n,ePlantPlantEFPHandleMouseEventData.zoomLevel*=n):(s.viewBox.baseVal.width=i.width/n,s.viewBox.baseVal.height=i.height/n,ePlantPlantEFPHandleMouseEventData.zoomLevel/=n))}class CreateSVGExpressionData{constructor(){this.eFPObjects={},this.sampleData={},this.sampleOptions=[],this.sampleReadableName={},this.topExpressionValues={},this.expressionValues={},this.topExpressionOptions=["Microarray","RNA-seq"],this.desiredDOMid="",this.appendSVG,this.clickList=[],this.svgValues={},this.svgMax=0,this.svgMin=0,this.svgMaxAverage=0,this.svgMaxAverageSample="",this.svgMinAverage=0,this.svgMinAverageSample="",this.svgObjectName="",this.svgContainerHeight="95vh"}generateSVG(e="AT3G24650",t,a="default",s=!0,i){this.svgValues={},this.svgMax=void 0,this.svgMin=void 0,this.svgMaxAverage=void 0,this.svgMaxAverageSample=void 0,this.svgMinAverage=void 0,this.svgMinAverageSample=void 0,this.includeDropdownAll=s,!1===this.clickList.includes(a)&&this.clickList.push(a),i&&"string"==typeof i?this.svgContainerHeight=i.toString():i&&"number"==typeof i&&(this.svgContainerHeight=`${i.toString()}px`),this.desiredDOMid=t,this.retrieveTopExpressionValues(a,e.toUpperCase())}async retrieveTopExpressionValues(e,t="AT3G24650"){var a=0;if(this.topExpressionValues&&this.topExpressionValues[t])Object.keys(this.topExpressionValues[t]).length>0&&await this.loadSampleData(e,t);else for(var s=0;s<this.topExpressionOptions.length;s++){var i=this.topExpressionOptions[s];let l=`https://bar.utoronto.ca/expression_max_api/max_average?method=${i}`;var o={loci:[t.toUpperCase()],method:i};o=JSON.stringify(o);var n={mode:"cors",method:"POST",headers:{}};n.headers["Content-type"]="application/json",n.body=o,await fetch(l,n).then(async s=>{200===s.status?await s.text().then(async s=>{let i;var o;i=s.length>0?JSON.parse(s):{};var n=l.split("=");if(n.length>1&&(o=n[1]),o&&i&&!0===i.wasSuccessful&&i.maxAverage){var r={};r[o]={},r[o].maxAverage=i.maxAverage[t.toUpperCase()],i.standardDeviation&&(r[o].standardDeviation=i.standardDeviation[t.toUpperCase()]),i.sample&&(r[o].sample=i.sample[t.toUpperCase()]),i.compendium&&(r[o].compendium=i.compendium[t.toUpperCase()]),this.topExpressionValues||(this.topExpressionValues={}),this.topExpressionValues[t]={...this.topExpressionValues[t],...r}}++a===this.topExpressionOptions.length&&await this.loadSampleData(e,t)}):200!==s.status&&(++a===this.topExpressionOptions.length&&await this.loadSampleData(e,t),console.error("fetch error - Status Code: "+s.status+", fetch-url: "+s.url+", document-url: "+window.location.href))}).catch(async s=>{++a===this.topExpressionOptions.length&&await this.loadSampleData(e,t),console.error(s)})}}async loadSampleData(e,t){if(0===Object.keys(this.sampleData).length){let a="https://raw.githubusercontent.com/BioAnalyticResource/ePlant_Plant_eFP/master/data/SampleData.min.json";await fetch(a,{mode:"cors"}).then(async a=>{200===a.status?await a.text().then(async a=>{let s;s=a.length>0?JSON.parse(a):{},this.sampleData=s,await this.retrieveSampleData(e,t)}):200!==a.status&&console.error("fetch error - Status Code: "+a.status+", fetch-url: "+a.url+", document-url: "+window.location.href)}).catch(async e=>{console.error(e)})}else Object.keys(this.sampleData).length>0&&await this.retrieveSampleData(e,t)}async retrieveSampleData(e,t){if(".svg"===e.substr(-4)&&(e=e.substr(0,e.length-4)),0===this.sampleOptions.length)for(const[e,t]of Object.entries(this.sampleData))this.sampleOptions.push(e),this.sampleReadableName[t.name]=e;var a=Object.keys(this.sampleData),s="",i=[],o=[];if(!a.includes(e)&&this.topExpressionValues[t]){var n=0,l=void 0;for(const[e,s]of Object.entries(this.topExpressionValues[t]))s.compendium&&s.compendium[1]&&a.includes(s.compendium[1])&&s.maxAverage&&s.maxAverage[1]&&s.maxAverage[1]>n&&(n=s.maxAverage[1],l=s.compendium[1]);e=l||"AbioticStress"}"default"===e&&(e="AbioticStress");var r=this.sampleData[e];let d;if(r&&r.sample&&(d=r.sample),r&&r.db&&(s=r.db),void 0!==s){o=Object.keys(r.sample),i=[];for(var h=0;h<o.length;h++)i=i.concat(d[o[h]])}this.eFPObjects[e]&&this.eFPObjects[e].locusCalled.includes(t)?this.eFPObjects[e]&&await this.addSVGtoDOM(e,t,this.includeDropdownAll):await this.callPlantEFP(s,t,i,e,d)}async callPlantEFP(e,t,a,s,i){let o="https://bar.utoronto.ca/~asullivan/webservices/plantefp.cgi?";o+="datasource="+e+"&",o+="id="+t+"&",o+="samples=[";for(var n=0;n<a.length;n++){var l=a[n].trim();o+='"'+(l=(l=l.replace(/\+/g,"%2B")).replace(/ /g,"%20"))+'"',n!==a.length-1&&(o+=",")}o+="]";i?await fetch(o,{mode:"cors"}).then(async a=>{200===a.status?await a.text().then(async a=>{let o;o=a.length>0?JSON.parse(a):{};let n=Object.keys(i);void 0===this.eFPObjects&&(this.eFPObjects={}),void 0===this.eFPObjects[s]&&(this.eFPObjects[s]={}),void 0===this.eFPObjects[s].sample&&(this.eFPObjects[s].sample={}),void 0===this.eFPObjects[s].sample&&(this.eFPObjects[s].sample={});for(var l=0;l<o.length;l++){var r=o[l].name.trim(),d=o[l].value,h="",u=r;u=(u=(u=r.replace(/%2B/g,"+")).replace(/%20/g," ")).trim();for(var f=0;f<n.length;f++)i[n[f]].includes(u)&&(h=n[f],void 0===this.eFPObjects[s].sample[h]&&(this.eFPObjects[s].sample[h]={}),void 0===this.eFPObjects[s].sample[h][u]&&(this.eFPObjects[s].sample[h][u]={}),this.eFPObjects[s].sample[h][u][t]=d,this.eFPObjects[s].locusCalled||(this.eFPObjects[s].locusCalled=[]),this.eFPObjects[s].locusCalled.includes(t)||this.eFPObjects[s].locusCalled.push(t))}this.eFPObjects[s].db=e,await this.addSVGtoDOM(s,t,this.includeDropdownAll)}):200!==a.status&&(await this.addSVGtoDOM(s,t,this.includeDropdownAll),console.error("fetch error - Status Code: "+a.status+", fetch-url: "+a.url+", document-url: "+window.location.href))}).catch(async e=>{await this.addSVGtoDOM(s,t,this.includeDropdownAll),console.error(e)}):(await this.addSVGtoDOM(s,t,this.includeDropdownAll),console.error(`sampleSubunits is ${i}`))}async addSVGtoDOM(e,t,a=!1){var s="Klepikova";let i=(new DOMParser).parseFromString('<div class="expressionContainer"></div>',"text/html");if(i=i.querySelector(".expressionContainer"),""!==e&&(s=e),a&&this.sampleOptions){let s=0,g=0,m="";if(this.topExpressionValues[t]&&Object.keys(this.topExpressionValues[t]).length>0){m+='<option\n                        value="hiddenOption" \n                        id="hiddenExpressionOption"\n                        disabled="true"\n                    >\n                        Compendiums with maximum average expression:\n                    </option>',g+=1;for(var o=Object.keys(this.topExpressionValues[t]),n=0;n<o.length;n++)if(this.topExpressionValues[t][o[n]])for(var l=this.topExpressionValues[t][o[n]],r=l.compendium,d=0;d<Object.keys(r).length;d++){var h=d+1;if(l.compendium[h]){var u=l.compendium[h],f=l.sample[h];if(f&&this.sampleData[u]&&this.sampleData[u]&&this.sampleData[u].description){var v=this.sampleData[u].description[f],c=l.maxAverage[h];m+=`<option\n                                            value="${u}"\n                                        >\n                                            ${this.sampleData[u].name}: ${v} at ${c} (${o[n]})\n                                        </option>`,g+=1;break}}}}m+='<option\n                    value="hiddenOption" \n                    id="allCompendiumOptions"\n                    disabled="true"\n                >\n                    All compendiums:\n                </option>',g+=1;var p=Object.keys(this.sampleReadableName);p.sort();for(let t in p)m+=`<option\n                        value="${this.sampleReadableName[p[t]]}"\n                    >\n                        ${p[t]}\n                    </option>`,this.sampleReadableName[p[t]]===e&&(s=parseInt(g)+parseInt(t));let b=(new DOMParser).parseFromString(`<div class="selectSVGContainer">\n                    <span>Select SVG to display:</span> \n                    <select \n                        onchange="window.createSVGExpressionData.generateSVG('${t}', '${this.desiredDOMid}', this.value.toString(), ${a})"\n                        id="sampleOptions" \n                        value="${e}" \n                        class="selectCompendiumOptions"\n                    >\n                        ${m}\n                    </select>\n                </div>`,"text/html");(b=b.body.childNodes[0]).getElementsByTagName("select")[0].selectedIndex=s,i.appendChild(b)}var g="https://bar.utoronto.ca/~asullivan/ePlant_Plant_eFP/compendiums/"+s+".svg";if(await fetch(g,{mode:"cors"}).then(async e=>{200===e.status?await e.text().then(async e=>{let a=(new DOMParser).parseFromString(e,"text/html").body.childNodes[0];a.id&&(this.svgObjectName=a.id,a.style="width: 100% !important; height: 100% !important;");let o=(new DOMParser).parseFromString(`<div id="${s}_object" style="height:${this.svgContainerHeight};" \n                                onMouseDown="ePlantPlantEFPHandleMouseEvent(${s}_object, 'down', event)" \n                                onMouseMove="ePlantPlantEFPHandleMouseEvent(${s}_object, 'move', event)" \n                                onMouseUp="ePlantPlantEFPHandleMouseEvent(${s}_object, 'up', event)" \n                                onMouseLeave="ePlantPlantEFPHandleMouseEvent(${s}_object, 'up', event)"\n                                onWheel="ePlantPlantEFPHandleMouseWheel(${s}_object, event)"\n                            ></div>`,"text/html").body.childNodes[0];o.appendChild(a),i.appendChild(o),this.appendSVG=i,await this.createLocusMatch(s,t)}):200!==e.status&&console.error("fetch error - Status Code: "+e.status+", fetch-url: "+e.url+", document-url: "+window.location.href)}).catch(async e=>{console.error(e)}),this.desiredDOMid&&this.desiredDOMid.length>0){var m=document.getElementById(this.desiredDOMid);let e=m.childNodes;for(let t in e)e[t].className&&e[t].className.includes("expressionContainer")&&m.removeChild(e[t]);m.appendChild(this.appendSVG)}}async createLocusMatch(e,t){for(var a=t,s="",i=0;i<a.length;i++)s+=1===i||3===i?a[i].toLowerCase():a[i];await this.createSVGValues(e,t)}async createSVGValues(e,t){let a=[],s=this.eFPObjects[e].sample,i=Object.keys(s);for(var o=0;o<i.length;o++)a.push(s[i[o]]);for(var n=0;n<i.length;n++){var l=Object.keys(s[i[n]]);void 0===this.svgValues[i[n]]&&(this.svgValues[i[n]]={});for(var r=0;r<l.length;r++)void 0===this.svgValues[i[n]].rawValues&&(this.svgValues[i[n]].rawValues=[]),this.svgValues[i[n]].rawValues.push(s[i[n]][l[r]][t])}await this.findExpressionValues(e,i)}async findExpressionValues(e,t){this.svgMax=void 0,this.svgMin=void 0;for(var a=0;a<t.length;a++){for(var s=this.svgValues[t[a]].rawValues.sort(),i=[],o=0;o<s.length;o++)!1===isNaN(s[o])&&i.push(parseFloat(s[o]));for(var n=0,l=0;l<i.length;l++)n+=i[l];var r=n/i.length,d=i[i.length-1],h=i[1];void 0===this.svgMax?this.svgMax=d:d>this.svgMax&&(this.svgMax=d),void 0===this.svgMin?this.svgMin=h:h<this.svgMin&&(this.svgMin=h),void 0===this.svgMaxAverage?(this.svgMaxAverage=r,this.svgMaxAverageSample=t[a]):r>this.svgMaxAverage&&(this.svgMaxAverage=r,this.svgMaxAverageSample=t[a]),void 0===this.svgMinAverage?(this.svgMinAverage=r,this.svgMinAverageSample=t[a]):r<this.svgMinAverage&&(this.svgMinAverage=r,this.svgMinAverageSample=t[a]),void 0===this.svgValues[t[a]]&&(this.svgValues[t[a]]={}),this.svgValues[t[a]].average=r,this.svgValues[t[a]].sd=this.standardDeviationCalc(i);var u=this.sampleData[e],f=Object.keys(u.controlComparison);if(!1===f.includes(t[a])){for(var v="",c=0;c<f.length;c++)u.controlComparison[f[c]].includes(t[a])&&(v=f[c]);if(this.svgValues[v]&&this.svgValues[v].rawValues){for(var p=this.svgValues[v].rawValues,g=0,m=0;m<p.length;m++)g+=parseFloat(p[m]);var b=g/p.length,x=0,w=0;if(null!==b&&b>0&&r>0){r>b?(x=r-b,this.svgValues[t[a]].inductionValue=x):b>r&&(w=b-r,this.svgValues[t[a]].reductionValue=w);var E=r/b;this.svgValues[t[a]].expressionRatio=E,this.svgValues[t[a]].controlSampleName=v,this.svgValues[t[a]].controlAverage=b}}}}await this.colourSVGs(e,t)}standardDeviationCalc(e){var t=0,a=e.length;if(a>=1){for(var s=0,i=0,o=0;o<a;o++)i+=e[o];for(var n=i/a,l=0;l<a;l++)s+=Math.pow(e[l]-n,2);t=Math.sqrt(s/a)}return t}async colourSVGs(e,t){for(var a=0;a<t.length;a++){var s=this.svgMaxAverage,i=this.svgValues[t[a]].average;i<0&&(i=0);var o=null;s&&s>=0&&(o=i/s*100),o>100?o=100:o<0&&(o=0);var n=this.percentageToColour(o),l=parseFloat(i).toFixed(3),r=this.svgValues[t[a]].rawValues.length;this.svgValues[t[a]].expressionLevel=l,this.svgValues[t[a]].sampleSize=r,await this.colourSVGSubunit(e,t[a],n,l,r)}}percentageToColour(e){var t=parseInt(e);if(t>=0){return["#ffff00","#fffc00","#fff900","#fff700","#fef400","#fff200","#ffef00","#feed00","#ffea00","#ffe800","#ffe500","#ffe200","#ffe000","#ffdd00","#ffdb00","#ffd800","#ffd600","#fed300","#ffd100","#ffce00","#ffcc00","#ffc900","#ffc600","#ffc400","#ffc100","#ffbf00","#ffbc00","#ffba00","#ffb700","#feb500","#ffb200","#ffaf00","#ffad00","#ffaa00","#ffa800","#ffa500","#ffa300","#ffa000","#ff9e00","#ff9b00","#ff9900","#ff9600","#ff9300","#ff9100","#ff8e00","#ff8c00","#ff8900","#ff8700","#ff8400","#ff8200","#ff7f00","#ff7c00","#ff7a00","#ff7700","#ff7500","#ff7200","#ff7000","#ff6d00","#ff6b00","#ff6800","#ff6600","#ff6300","#ff6000","#ff5e00","#ff5b00","#ff5900","#ff5600","#ff5400","#ff5100","#ff4f00","#ff4c00","#ff4900","#ff4700","#ff4400","#ff4200","#ff3f00","#ff3d00","#ff3a00","#ff3800","#ff3500","#ff3200","#ff3000","#ff2d00","#ff2b00","#ff2800","#ff2600","#ff2300","#ff2100","#ff1e00","#ff1c00","#ff1900","#ff1600","#ff1400","#ff1100","#ff0f00","#ff0c00","#ff0a00","#ff0700","#ff0500","#ff0200","#ff0000"][t]}return"#808080"}async colourSVGSubunit(e,t,a,s,i=1){let o=this.appendSVG.lastElementChild.getElementsByTagName("svg")[0],n=[...o.getElementsByTagName("path"),...o.getElementsByTagName("g")];if(o&&n.length>0){var l=createSVGExpressionData.svgValues[t],r=void 0;this.sampleData[e].description&&(r=this.sampleData[e].description[t]),void 0!==r&&""!==r||(r=t);var d=["Control_Shoot_0_Hour","Cold_Shoot_0_Hour","Osmotic_Shoot_0_Hour","Salt_Shoot_0_Hour","Drought_Shoot_0_Hour","Genotoxic_Shoot_0_Hour","Oxidative_Shoot_0_Hour","UV-B_Shoot_0_Hour","Wounding_Shoot_0_Hour","Heat_Shoot_0_Hour"],h=["Control_Root_0_Hour","Cold_Root_0_Hour","Osmotic_Root_0_Hour","Salt_Root_0_Hour","Drought_Root_0_Hour","Genotoxic_Root_0_Hour","Oxidative_Root_0_Hour","UV-B_Root_0_Hour","Wounding_Root_0_Hour","Heat_Root_0_Hour"],u=!1,f=!1;let o;d.includes(t)?u=!0:h.includes(t)&&(f=!0);for(let e in n)n[e].id===t&&(o=n[e]);if(o&&o.childNodes.length>0){var v;v=o.childNodes;let e=!1;for(let t in v)"path"!==v[t].tagName&&"g"!==v[t].tagName||(v[t].setAttribute("fill",a),e=!0);e||o.setAttribute("fill",a)}else o&&o.setAttribute("fill",a);if(o){o.setAttribute("class","hoverDetails"),o.addEventListener("mouseenter",function(e){addTissueMetadata(this.id)}),o.addEventListener("mouseleave",function(e){removeTissueMetadata(this.id)}),o.setAttribute("data-expressionValue",s),o.setAttribute("data-sampleSize",i),o.setAttribute("data-standardDeviation",l.sd),o.setAttribute("data-sampleSize",i);var c=document.createElementNS("https://www.w3.org/2000/svg","title");c.textContent=r+"\nExpression level: "+s+"\nSample size: "+i+"\nStandard Deviation: "+parseFloat(l.sd).toFixed(3);o.appendChild(c)}if(u)for(let e in d){let t;for(let a in n)n[a].id===d[e]&&(t=n[a]);if(t){if(t.setAttribute("class","hoverDetails"),t.addEventListener("mouseenter",function(e){addTissueMetadata(this.id)}),t.addEventListener("mouseleave",function(e){removeTissueMetadata(this.id)}),(v=t.childNodes).length>0){let e=!1;for(var p=0;p<v.length;p++)"path"===v[p].tagName&&(v[p].setAttribute("fill",a),e=!0);e||t.setAttribute("fill",a)}else t.setAttribute("fill",a);c.textContent=d[e]+"\nExpression level: "+s+"\nSample size: "+i,t.appendChild(c)}}else if(f)for(let e in h){let t;for(let a in n)n[a].id===h[e]&&(t=n[a]);if(t){if(t.setAttribute("class","hoverDetails"),t.addEventListener("mouseenter",function(e){addTissueMetadata(this.id)}),t.addEventListener("mouseleave",function(e){removeTissueMetadata(this.id)}),(v=t.childNodes).length>0){let e=!1;for(p=0;p<v.length;p++)"path"===v[p].tagName&&(v[p].setAttribute("fill",a),e=!0);e||t.setAttribute("fill",a)}else t.setAttribute("fill",a);c.textContent=h[e]+"\nExpression level: "+s+"\nSample size: "+i,t.appendChild(c)}}}}}let createSVGExpressionData=new CreateSVGExpressionData;window.createSVGExpressionData=createSVGExpressionData;